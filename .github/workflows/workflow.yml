name: workflow

on: [push, pull_request]

jobs:
  frontend-install:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: frontend-node-modules-cache
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: frontend-node-modules-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install dependencies
        run: |
          cd frontend
          cd node_modules || npm ci

  backend-install:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: backend-node-modules-cache
        uses: actions/cache@v2
        with:
          path: ./backend/node_modules
          key: backend-node-modules-${{ hashFiles('backend/package-lock.json') }}

      - name: Install dependencies
        run: |
          cd backend
          cd node_modules || npm ci

  frontend-tests:
    runs-on: ubuntu-latest
    needs: [frontend-install]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Use cached dependencies
        id: frontend-node-modules-cache
        uses: actions/cache@v2
        with:
          path: ./frontend/node_modules
          key: frontend-node-modules-${{ hashFiles('frontend/package-lock.json') }}

      - name: Execute frontend tests
        run: cd frontend && npm run test:all

  backend-tests:
    runs-on: ubuntu-latest
    needs: [backend-install]
    env:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Use cached dependencies
        id: backend-node-modules-cache
        uses: actions/cache@v2
        with:
          path: ./backend/node_modules
          key: backend-node-modules-${{ hashFiles('backend/package-lock.json') }}

      - name: Execute migrations
        env:
          AUTH__JWT_SECRET: some-random-characters-23abc
          DB__DATABASE_NAME: ${{ env.POSTGRES_DB }}
          DB__USERNAME: ${{ env.POSTGRES_USER }}
          DB__PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        run: cd backend && npm run migration:run

      - name: Seed test data for end-to-end tests
        env:
          PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
        run: psql -h localhost -U postgres < ./backend/e2e/e2e-test-init-db.sql

      - name: Execute backend tests
        env:
          AUTH__JWT_SECRET: some-random-characters-23abc
          AUTH__GOOGLE_OAUTH20__ENABLED: true
          AUTH__GOOGLE_OAUTH20__CLIENT_ID: 123456789123-randomcharacters.apps.googleusercontent.com
          AUTH__GOOGLE_OAUTH20__CLIENT_SECRET: somegooglegeneratedsecret
          DB__DATABASE_NAME: ${{ env.POSTGRES_DB }}
          DB__USERNAME: ${{ env.POSTGRES_USER }}
          DB__PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        run: cd backend && npm run test:all
      
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./backend/coverage/lcov.info"
          base-path: "backend"
